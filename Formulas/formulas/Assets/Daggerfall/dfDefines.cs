using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace df
{
    public enum player_graphic 
    {
        Stand,
        Walk,
        Attack,
        Hit,
        Lightning,
        Fire,
        Magic,
        Death,
        Block,

        LAST = Block
    };

    public enum PLR_MODE
    {
        PM_STAND,
        PM_WALK_NORTHWARDS,
        PM_WALK_SOUTHWARDS,
        PM_WALK_SIDEWAYS,
        PM_ATTACK,
        PM_RATTACK,
        PM_BLOCK,
        PM_GOTHIT,
        PM_DEATH,
        PM_SPELL,
        PM_NEWLVL,
        PM_QUIT,
    };

    /**
    * @brief Defines if and how a group of monsters should be spawned with the unique monster
    */
    public enum UniqueMonsterPack 
    {
        /**
        * @brief Don't spawn a group of monsters with the unique monster
        */
        None,
        /**
        * @brief Spawn a group of monsters that are independent from the unique monster
        */
        Independent,
        /**
        * @brief Spawn a group of monsters that are leashed to the unique monster
        */
        Leashed,
    };

    public enum _speech_id 
    {
        TEXT_KING1,
        TEXT_KING2,
        TEXT_KING3,
        TEXT_KING4,
        TEXT_KING5,
        TEXT_KING6,
        TEXT_KING7,
        TEXT_KING8,
        TEXT_KING9,
        TEXT_KING10,
        TEXT_KING11,
        TEXT_BANNER1,
        TEXT_BANNER2,
        TEXT_BANNER3,
        TEXT_BANNER4,
        TEXT_BANNER5,
        TEXT_BANNER6,
        TEXT_BANNER7,
        TEXT_BANNER8,
        TEXT_BANNER9,
        TEXT_BANNER10,
        TEXT_BANNER11,
        TEXT_BANNER12,
        TEXT_VILE1,
        TEXT_VILE2,
        TEXT_VILE3,
        TEXT_VILE4,
        TEXT_VILE5,
        TEXT_VILE6,
        TEXT_VILE7,
        TEXT_VILE8,
        TEXT_VILE9,
        TEXT_VILE10,
        TEXT_VILE11,
        TEXT_VILE12,
        TEXT_VILE13,
        TEXT_VILE14,
        TEXT_POISON1,
        TEXT_POISON2,
        TEXT_POISON3,
        TEXT_POISON4,
        TEXT_POISON5,
        TEXT_POISON6,
        TEXT_POISON7,
        TEXT_POISON8,
        TEXT_POISON9,
        TEXT_POISON10,
        TEXT_BONE1,
        TEXT_BONE2,
        TEXT_BONE3,
        TEXT_BONE4,
        TEXT_BONE5,
        TEXT_BONE6,
        TEXT_BONE7,
        TEXT_BONE8,
        TEXT_BUTCH1,
        TEXT_BUTCH2,
        TEXT_BUTCH3,
        TEXT_BUTCH4,
        TEXT_BUTCH5,
        TEXT_BUTCH6,
        TEXT_BUTCH7,
        TEXT_BUTCH8,
        TEXT_BUTCH9,
        TEXT_BUTCH10,
        TEXT_BLIND1,
        TEXT_BLIND2,
        TEXT_BLIND3,
        TEXT_BLIND4,
        TEXT_BLIND5,
        TEXT_BLIND6,
        TEXT_BLIND7,
        TEXT_BLIND8,
        TEXT_VEIL1,
        TEXT_VEIL2,
        TEXT_VEIL3,
        TEXT_VEIL4,
        TEXT_VEIL5,
        TEXT_VEIL6,
        TEXT_VEIL7,
        TEXT_VEIL8,
        TEXT_VEIL9,
        TEXT_VEIL10,
        TEXT_VEIL11,
        TEXT_ANVIL1,
        TEXT_ANVIL2,
        TEXT_ANVIL3,
        TEXT_ANVIL4,
        TEXT_ANVIL5,
        TEXT_ANVIL6,
        TEXT_ANVIL7,
        TEXT_ANVIL8,
        TEXT_ANVIL9,
        TEXT_ANVIL10,
        TEXT_BLOOD1,
        TEXT_BLOOD2,
        TEXT_BLOOD3,
        TEXT_BLOOD4,
        TEXT_BLOOD5,
        TEXT_BLOOD6,
        TEXT_BLOOD7,
        TEXT_BLOOD8,
        TEXT_WARLRD1,
        TEXT_WARLRD2,
        TEXT_WARLRD3,
        TEXT_WARLRD4,
        TEXT_WARLRD5,
        TEXT_WARLRD6,
        TEXT_WARLRD7,
        TEXT_WARLRD8,
        TEXT_WARLRD9,
        TEXT_INFRA1,
        TEXT_INFRA2,
        TEXT_INFRA3,
        TEXT_INFRA4,
        TEXT_INFRA5,
        TEXT_INFRA6,
        TEXT_INFRA7,
        TEXT_INFRA8,
        TEXT_INFRA9,
        TEXT_INFRA10,
        TEXT_MUSH1,
        TEXT_MUSH2,
        TEXT_MUSH3,
        TEXT_MUSH4,
        TEXT_MUSH5,
        TEXT_MUSH6,
        TEXT_MUSH7,
        TEXT_MUSH8,
        TEXT_MUSH9,
        TEXT_MUSH10,
        TEXT_MUSH11,
        TEXT_MUSH12,
        TEXT_MUSH13,
        TEXT_DOOM1,
        TEXT_DOOM2,
        TEXT_DOOM3,
        TEXT_DOOM4,
        TEXT_DOOM5,
        TEXT_DOOM6,
        TEXT_DOOM7,
        TEXT_DOOM8,
        TEXT_DOOM9,
        TEXT_DOOM10,
        TEXT_GARBUD1,
        TEXT_GARBUD2,
        TEXT_GARBUD3,
        TEXT_GARBUD4,
        TEXT_ZHAR1,
        TEXT_ZHAR2,
        TEXT_STORY1,
        TEXT_STORY2,
        TEXT_STORY3,
        TEXT_STORY4,
        TEXT_STORY5,
        TEXT_STORY6,
        TEXT_STORY7,
        TEXT_STORY9,
        TEXT_STORY10,
        TEXT_STORY11,
        TEXT_OGDEN1,
        TEXT_OGDEN2,
        TEXT_OGDEN3,
        TEXT_OGDEN4,
        TEXT_OGDEN5,
        TEXT_OGDEN6,
        TEXT_OGDEN8,
        TEXT_OGDEN9,
        TEXT_OGDEN10,
        TEXT_PEPIN1,
        TEXT_PEPIN2,
        TEXT_PEPIN3,
        TEXT_PEPIN4,
        TEXT_PEPIN5,
        TEXT_PEPIN6,
        TEXT_PEPIN7,
        TEXT_PEPIN9,
        TEXT_PEPIN10,
        TEXT_PEPIN11,
        TEXT_GILLIAN1,
        TEXT_GILLIAN2,
        TEXT_GILLIAN3,
        TEXT_GILLIAN4,
        TEXT_GILLIAN5,
        TEXT_GILLIAN6,
        TEXT_GILLIAN7,
        TEXT_GILLIAN9,
        TEXT_GILLIAN10,
        TEXT_GRISWOLD1,
        TEXT_GRISWOLD2,
        TEXT_GRISWOLD3,
        TEXT_GRISWOLD4,
        TEXT_GRISWOLD5,
        TEXT_GRISWOLD6,
        TEXT_GRISWOLD7,
        TEXT_GRISWOLD8,
        TEXT_GRISWOLD9,
        TEXT_GRISWOLD10,
        TEXT_GRISWOLD12,
        TEXT_GRISWOLD13,
        TEXT_FARNHAM1,
        TEXT_FARNHAM2,
        TEXT_FARNHAM3,
        TEXT_FARNHAM4,
        TEXT_FARNHAM5,
        TEXT_FARNHAM6,
        TEXT_FARNHAM8,
        TEXT_FARNHAM9,
        TEXT_FARNHAM10,
        TEXT_FARNHAM11,
        TEXT_FARNHAM12,
        TEXT_FARNHAM13,
        TEXT_ADRIA1,
        TEXT_ADRIA2,
        TEXT_ADRIA3,
        TEXT_ADRIA4,
        TEXT_ADRIA5,
        TEXT_ADRIA6,
        TEXT_ADRIA7,
        TEXT_ADRIA8,
        TEXT_ADRIA9,
        TEXT_ADRIA10,
        TEXT_ADRIA12,
        TEXT_ADRIA13,
        TEXT_WIRT1,
        TEXT_WIRT2,
        TEXT_WIRT3,
        TEXT_WIRT4,
        TEXT_WIRT5,
        TEXT_WIRT6,
        TEXT_WIRT7,
        TEXT_WIRT8,
        TEXT_WIRT9,
        TEXT_WIRT11,
        TEXT_WIRT12,
        TEXT_BONER,
        TEXT_BLOODY,
        TEXT_BLINDING,
        TEXT_BLOODWAR,
        TEXT_MBONER,
        TEXT_MBLOODY,
        TEXT_MBLINDING,
        TEXT_MBLOODWAR,
        TEXT_RBONER,
        TEXT_RBLOODY,
        TEXT_RBLINDING,
        TEXT_RBLOODWAR,
        TEXT_COW1,
        TEXT_COW2,
        TEXT_BOOK11,
        TEXT_BOOK12,
        TEXT_BOOK13,
        TEXT_BOOK21,
        TEXT_BOOK22,
        TEXT_BOOK23,
        TEXT_BOOK31,
        TEXT_BOOK32,
        TEXT_BOOK33,
        TEXT_INTRO,
        TEXT_HBONER,
        TEXT_HBLOODY,
        TEXT_HBLINDING,
        TEXT_HBLOODWAR,
        TEXT_BBONER,
        TEXT_BBLOODY,
        TEXT_BBLINDING,
        TEXT_BBLOODWAR,
        TEXT_GRAVE1,
        TEXT_GRAVE2,
        TEXT_GRAVE3,
        TEXT_GRAVE4,
        TEXT_GRAVE5,
        TEXT_GRAVE6,
        TEXT_GRAVE7,
        TEXT_GRAVE8,
        TEXT_GRAVE9,
        TEXT_GRAVE10,
        TEXT_FARMER1,
        TEXT_FARMER2,
        TEXT_FARMER3,
        TEXT_FARMER4,
        TEXT_FARMER5,
        TEXT_GIRL1,
        TEXT_GIRL2,
        TEXT_GIRL3,
        TEXT_GIRL4,
        TEXT_DEFILER1,
        TEXT_DEFILER2,
        TEXT_DEFILER3,
        TEXT_DEFILER4,
        TEXT_DEFILER5,
        TEXT_NAKRUL1,
        TEXT_NAKRUL2,
        TEXT_NAKRUL3,
        TEXT_NAKRUL4,
        TEXT_NAKRUL5,
        TEXT_CORNSTN,
        TEXT_JERSEY1,
        TEXT_JERSEY2,
        TEXT_JERSEY3,
        TEXT_JERSEY4,
        TEXT_JERSEY5,
        TEXT_JERSEY6,
        TEXT_JERSEY7,
        TEXT_JERSEY8,
        TEXT_JERSEY9,
        TEXT_TRADER,
        TEXT_FARMER6,
        TEXT_FARMER7,
        TEXT_FARMER8,
        TEXT_FARMER9,
        TEXT_FARMER10,
        TEXT_JERSEY10,
        TEXT_JERSEY11,
        TEXT_JERSEY12,
        TEXT_JERSEY13,
        TEXT_SKLJRN,
        TEXT_BOOK4,
        TEXT_BOOK5,
        TEXT_BOOK6,
        TEXT_BOOK7,
        TEXT_BOOK8,
        TEXT_BOOK9,
        TEXT_BOOKA,
        TEXT_BOOKB,
        TEXT_BOOKC,
        TEXT_OBOOKA,
        TEXT_OBOOKB,
        TEXT_OBOOKC,
        TEXT_MBOOKA,
        TEXT_MBOOKB,
        TEXT_MBOOKC,
        TEXT_RBOOKA,
        TEXT_RBOOKB,
        TEXT_RBOOKC,
        TEXT_BBOOKA,
        TEXT_BBOOKB,
        TEXT_BBOOKC,
        /*
        TEXT_DEADGUY,
        TEXT_FARNHAM14,
        TEXT_FARNHAM15,
        TEXT_FARNHAM16,
        TEXT_FARNHAM17,
        TEXT_FARNHAM18,
        TEXT_FARNHAM19,
        TEXT_FARNHAM20,
        TEXT_FARNHAM21,
        TEXT_FARNHAM22,
        TEXT_GILLIAN11,
        TEXT_GILLIAN12,
        TEXT_GILLIAN13,
        TEXT_GILLIAN14,
        TEXT_GILLIAN15,
        TEXT_GILLIAN16,
        TEXT_GILLIAN17,
        TEXT_GILLIAN18,
        TEXT_GILLIAN19,
        TEXT_GILLIAN20,
        TEXT_GILLIAN21,
        TEXT_GILLIAN22,
        TEXT_GILLIAN23,
        TEXT_GILLIAN24,
        TEXT_GILLIAN25,
        TEXT_GILLIAN26,
        TEXT_PEPIN12,
        TEXT_PEPIN13,
        TEXT_PEPIN14,
        TEXT_PEPIN15,
        TEXT_PEPIN16,
        TEXT_PEPIN17,
        TEXT_PEPIN18,
        TEXT_PEPIN19,
        TEXT_PEPIN20,
        TEXT_PEPIN21,
        TEXT_PEPIN22,
        TEXT_PEPIN23,
        TEXT_PEPIN24,
        TEXT_PEPIN25,
        TEXT_PEPIN26,
        TEXT_PEPIN27,
        TEXT_PEPIN28,
        TEXT_PEPIN29,
        TEXT_PEPIN30,
        TEXT_GRISWOLD14,
        TEXT_GRISWOLD15,
        TEXT_GRISWOLD16,
        TEXT_GRISWOLD17,
        TEXT_GRISWOLD18,
        TEXT_GRISWOLD19,
        TEXT_GRISWOLD20,
        TEXT_GRISWOLD21,
        TEXT_GRISWOLD22,
        TEXT_GRISWOLD23,
        TEXT_GRISWOLD24,
        TEXT_GRISWOLD25,
        TEXT_GRISWOLD26,
        TEXT_GRISWOLD27,
        TEXT_GRISWOLD28,
        TEXT_GRISWOLD29,
        TEXT_GRISWOLD30,
        TEXT_GRISWOLD31,
        TEXT_GRISWOLD32,
        TEXT_GRISWOLD33,
        TEXT_GRISWOLD34,
        TEXT_GRISWOLD35,
        TEXT_GRISWOLD36,
        TEXT_GRISWOLD37,
        */
        TEXT_NONE = -1,
    };

    public enum UniqueMonsterType 
    {
        Garbud,
        SkeletonKing,
        Zhar,
        SnotSpill,
        Lazarus,
        RedVex,
        BlackJade,
        Lachdan,
        WarlordOfBlood,
        Butcher,
        HorkDemon,
        Defiler,
        NaKrul,
        None = -1,
    };

    public enum _sfx_id 
    {
        PS_WALK1,
        PS_WALK2,
        IS_CAST2,
        IS_CAST4,
        IS_CAST6,
        IS_CAST8,
        SFX_NONE = -1,
    }

    public enum missile_id 
    {
        MIS_ARROW,
        MIS_FIREBOLT,
        MIS_GUARDIAN,
        MIS_RNDTELEPORT,
        MIS_LIGHTBALL,
        MIS_FIREWALL,
        MIS_FIREBALL,
        MIS_LIGHTCTRL,
        MIS_LIGHTNING,
        MIS_MISEXP,
        MIS_TOWN,
        MIS_FLASH,
        MIS_FLASH2,
        MIS_MANASHIELD,
        MIS_FIREMOVE,
        MIS_CHAIN,
        MIS_SENTINAL,
        MIS_BLODSTAR,
        MIS_BONE,
        MIS_METLHIT,
        MIS_RHINO,
        MIS_MAGMABALL,
        MIS_LIGHTCTRL2,
        MIS_LIGHTNING2,
        MIS_FLARE,
        MIS_MISEXP2,
        MIS_TELEPORT,
        MIS_FARROW,
        MIS_DOOMSERP,
        MIS_FIREWALLA,
        MIS_STONE,
        MIS_NULL_1F,
        MIS_INVISIBL,
        MIS_GOLEM,
        MIS_ETHEREALIZE,
        MIS_BLODBUR,
        MIS_BOOM,
        MIS_HEAL,
        MIS_FIREWALLC,
        MIS_INFRA,
        MIS_IDENTIFY,
        MIS_WAVE,
        MIS_NOVA,
        MIS_BLODBOIL,
        MIS_APOCA,
        MIS_REPAIR,
        MIS_RECHARGE,
        MIS_DISARM,
        MIS_FLAME,
        MIS_FLAMEC,
        MIS_FIREMAN,
        MIS_KRULL,
        MIS_CBOLT,
        MIS_HBOLT,
        MIS_RESURRECT,
        MIS_TELEKINESIS,
        MIS_LARROW,
        MIS_ACID,
        MIS_MISEXP3,
        MIS_ACIDPUD,
        MIS_HEALOTHER,
        MIS_ELEMENT,
        MIS_RESURRECTBEAM,
        MIS_BONESPIRIT,
        MIS_WEAPEXP,
        MIS_RPORTAL,
        MIS_BOOM2,
        MIS_DIABAPOCA,
        MIS_MANA,
        MIS_MAGI,
        MIS_LIGHTWALL,
        MIS_LIGHTNINGWALL,
        MIS_IMMOLATION,
        MIS_SPECARROW,
        MIS_FIRENOVA,
        MIS_LIGHTARROW,
        MIS_CBOLTARROW,
        MIS_HBOLTARROW,
        MIS_WARP,
        MIS_REFLECT,
        MIS_BERSERK,
        MIS_FIRERING,
        MIS_STEALPOTS,
        MIS_MANATRAP,
        MIS_LIGHTRING,
        MIS_SEARCH,
        MIS_FLASHFR,
        MIS_FLASHBK,
        MIS_IMMOLATION2,
        MIS_RUNEFIRE,
        MIS_RUNELIGHT,
        MIS_RUNENOVA,
        MIS_RUNEIMMOLAT,
        MIS_RUNESTONE,
        MIS_HIVEEXP,
        MIS_HORKDMN,
        MIS_JESTER,
        MIS_HIVEEXP2,
        MIS_LICH,
        MIS_PSYCHORB,
        MIS_NECROMORB,
        MIS_ARCHLICH,
        MIS_BONEDEMON,
        MIS_EXYEL2,
        MIS_EXRED3,
        MIS_EXBL2,
        MIS_EXBL3,
        MIS_EXORA1,
        MIS_NULL = -1,
    };

    public enum magic_type
    {
        STYPE_FIRE,
        STYPE_LIGHTNING,
        STYPE_MAGIC,
    };

    public enum goodorevil
    {
        GOE_ANY,
        GOE_EVIL,
        GOE_GOOD,
    };

    public enum AffixItemType
    {
        // clang-format off
        None      = 0,
        Misc      = 1 << 0,
        Bow       = 1 << 1,
        Staff     = 1 << 2,
        Weapon    = 1 << 3,
        Shield    = 1 << 4,
        Armor     = 1 << 5,
        // clang-format on
    };

    public enum CharacterAttribute
    {
        Strength,
        Magic,
        Dexterity,
        Vitality,

        FIRST = Strength,
        LAST = Vitality
    };

    public enum _unique_items
    {
        UITEM_CLEAVER,
        UITEM_SKCROWN,
        UITEM_INFRARING,
        UITEM_OPTAMULET,
        UITEM_TRING,
        UITEM_HARCREST,
        UITEM_STEELVEIL,
        UITEM_ARMOFVAL,
        UITEM_GRISWOLD,
        UITEM_BOVINE,
        UITEM_RIFTBOW,
        UITEM_NEEDLER,
        UITEM_CELESTBOW,
        UITEM_DEADLYHUNT,
        UITEM_BOWOFDEAD,
        UITEM_BLKOAKBOW,
        UITEM_FLAMEDART,
        UITEM_FLESHSTING,
        UITEM_WINDFORCE,
        UITEM_EAGLEHORN,
        UITEM_GONNAGALDIRK,
        UITEM_DEFENDER,
        UITEM_GRYPHONCLAW,
        UITEM_BLACKRAZOR,
        UITEM_GIBBOUSMOON,
        UITEM_ICESHANK,
        UITEM_EXECUTIONER,
        UITEM_BONESAW,
        UITEM_SHADHAWK,
        UITEM_WIZSPIKE,
        UITEM_LGTSABRE,
        UITEM_FALCONTALON,
        UITEM_INFERNO,
        UITEM_DOOMBRINGER,
        UITEM_GRIZZLY,
        UITEM_GRANDFATHER,
        UITEM_MANGLER,
        UITEM_SHARPBEAK,
        UITEM_BLOODLSLAYER,
        UITEM_CELESTAXE,
        UITEM_WICKEDAXE,
        UITEM_STONECLEAV,
        UITEM_AGUHATCHET,
        UITEM_HELLSLAYER,
        UITEM_MESSERREAVER,
        UITEM_CRACKRUST,
        UITEM_JHOLMHAMM,
        UITEM_CIVERBS,
        UITEM_CELESTSTAR,
        UITEM_BARANSTAR,
        UITEM_GNARLROOT,
        UITEM_CRANBASH,
        UITEM_SCHAEFHAMM,
        UITEM_DREAMFLANGE,
        UITEM_STAFFOFSHAD,
        UITEM_IMMOLATOR,
        UITEM_STORMSPIRE,
        UITEM_GLEAMSONG,
        UITEM_THUNDERCALL,
        UITEM_PROTECTOR,
        UITEM_NAJPUZZLE,
        UITEM_MINDCRY,
        UITEM_RODOFONAN,
        UITEM_SPIRITSHELM,
        UITEM_THINKINGCAP,
        UITEM_OVERLORDHELM,
        UITEM_FOOLSCREST,
        UITEM_GOTTERDAM,
        UITEM_ROYCIRCLET,
        UITEM_TORNFLESH,
        UITEM_GLADBANE,
        UITEM_RAINCLOAK,
        UITEM_LEATHAUT,
        UITEM_WISDWRAP,
        UITEM_SPARKMAIL,
        UITEM_SCAVCARAP,
        UITEM_NIGHTSCAPE,
        UITEM_NAJPLATE,
        UITEM_DEMONSPIKE,
        UITEM_DEFLECTOR,
        UITEM_SKULLSHLD,
        UITEM_DRAGONBRCH,
        UITEM_BLKOAKSHLD,
        UITEM_HOLYDEF,
        UITEM_STORMSHLD,
        UITEM_BRAMBLE,
        UITEM_REGHA,
        UITEM_BLEEDER,
        UITEM_CONSTRICT,
        UITEM_ENGAGE,
        UITEM_INVALID = -1,
    };

    public enum monster_treasure
    {
        // clang-format off
        T_MASK    = 0xFFF,
        T_NODROP = 0x4000, // monster doesn't drop any loot
        T_UNIQ    = 0x8000, // use combined with unique item's ID - for example butcher's cleaver = T_UNIQ+UITEM_CLEAVE
        // clang-format on
    };

    public class monster_flag {
        // clang-format off
        public const int MFLAG_HIDDEN          = 1 << 0;
        public const int MFLAG_LOCK_ANIMATION  = 1 << 1;
        public const int MFLAG_ALLOW_SPECIAL   = 1 << 2;
        public const int MFLAG_NOHEAL          = 1 << 3;
        public const int MFLAG_TARGETS_MONSTER = 1 << 4;
        public const int MFLAG_GOLEM           = 1 << 5;
        public const int MFLAG_QUEST_COMPLETE  = 1 << 6;
        public const int MFLAG_KNOCKBACK       = 1 << 7;
        public const int MFLAG_SEARCH          = 1 << 8;
        public const int MFLAG_CAN_OPEN_DOOR   = 1 << 9;
        public const int MFLAG_NO_ENEMY        = 1 << 10;
        public const int MFLAG_BERSERK         = 1 << 11;
        public const int MFLAG_NOLIFESTEAL     = 1 << 12;
        // clang-format on
    };

    public class monster_resistance 
    {
        // clang-format off
        public const int RESIST_MAGIC     = 1 << 0;
        public const int RESIST_FIRE      = 1 << 1;
        public const int RESIST_LIGHTNING = 1 << 2;
        public const int IMMUNE_MAGIC     = 1 << 3;
        public const int IMMUNE_FIRE      = 1 << 4;
        public const int IMMUNE_LIGHTNING = 1 << 5;
        public const int IMMUNE_ACID      = 1 << 7;
        // clang-format on
    };

    public enum Direction {
        South,
        SouthWest,
        West,
        NorthWest,
        North,
        NorthEast,
        East,
        SouthEast,
        NoDirection
    };

    public enum icreateinfo_flag2 {
        // clang-format off
        CF_HELLFIRE = 1,
        // clang-format on
    };

    public enum item_quality 
    {
        ITEM_QUALITY_NORMAL,
        ITEM_QUALITY_MAGIC,
        ITEM_QUALITY_UNIQUE,
    };

    public enum item_effect_type
    {
        IPL_TOHIT,
        IPL_TOHIT_CURSE,
        IPL_DAMP,
        IPL_DAMP_CURSE,
        IPL_TOHIT_DAMP,
        IPL_TOHIT_DAMP_CURSE,
        IPL_ACP,
        IPL_ACP_CURSE,
        IPL_FIRERES,
        IPL_LIGHTRES,
        IPL_MAGICRES,
        IPL_ALLRES,
        IPL_SPLLVLADD = 14,
        IPL_CHARGES,
        IPL_FIREDAM,
        IPL_LIGHTDAM,
        IPL_STR = 19,
        IPL_STR_CURSE,
        IPL_MAG,
        IPL_MAG_CURSE,
        IPL_DEX,
        IPL_DEX_CURSE,
        IPL_VIT,
        IPL_VIT_CURSE,
        IPL_ATTRIBS,
        IPL_ATTRIBS_CURSE,
        IPL_GETHIT_CURSE,
        IPL_GETHIT,
        IPL_LIFE,
        IPL_LIFE_CURSE,
        IPL_MANA,
        IPL_MANA_CURSE,
        IPL_DUR,
        IPL_DUR_CURSE,
        IPL_INDESTRUCTIBLE,
        IPL_LIGHT,
        IPL_LIGHT_CURSE,
        IPL_MULT_ARROWS = 41, /* only used in hellfire */
        IPL_FIRE_ARROWS,
        IPL_LIGHT_ARROWS,
        IPL_INVCURS,
        IPL_THORNS,
        IPL_NOMANA,
        IPL_FIREBALL = 50, /* only used in hellfire */
        IPL_ABSHALFTRAP = 52,
        IPL_KNOCKBACK,
        IPL_STEALMANA = 55,
        IPL_STEALLIFE,
        IPL_TARGAC,
        IPL_FASTATTACK,
        IPL_FASTRECOVER,
        IPL_FASTBLOCK,
        IPL_DAMMOD,
        IPL_RNDARROWVEL,
        IPL_SETDAM,
        IPL_SETDUR,
        IPL_NOMINSTR,
        IPL_SPELL,
        IPL_ONEHAND = 68,
        IPL_3XDAMVDEM,
        IPL_ALLRESZERO,
        IPL_DRAINLIFE = 72,
        IPL_RNDSTEALLIFE,
        IPL_SETAC = 75,
        IPL_ADDACLIFE,
        IPL_ADDMANAAC,
        IPL_AC_CURSE = 79,
        IPL_LASTDIABLO = IPL_AC_CURSE,
        IPL_FIRERES_CURSE,
        IPL_LIGHTRES_CURSE,
        IPL_MAGICRES_CURSE,
        IPL_DEVASTATION = 84,
        IPL_DECAY,
        IPL_PERIL,
        IPL_JESTERS,
        IPL_CRYSTALLINE,
        IPL_DOPPELGANGER,
        IPL_ACDEMON,
        IPL_ACUNDEAD,
        IPL_MANATOLIFE,
        IPL_LIFETOMANA,
        IPL_INVALID = -1,
    };

    public enum item_drop_rate 
    {
        IDROP_NEVER,
        IDROP_REGULAR,
        IDROP_DOUBLE, // 双倍掉落，加入掉落池 2 次
    };

    public enum item_class 
    {
        ICLASS_NONE,
        ICLASS_WEAPON,
        ICLASS_ARMOR,
        ICLASS_MISC,
        ICLASS_GOLD,
        ICLASS_QUEST,
    };

    public enum item_equip_type 
    {
        ILOC_NONE,
        ILOC_ONEHAND,
        ILOC_TWOHAND,
        ILOC_ARMOR,
        ILOC_HELM,
        ILOC_RING,
        ILOC_AMULET,
        ILOC_UNEQUIPABLE,
        ILOC_BELT,
        ILOC_INVALID = -1,
    };

    public enum item_misc_id
    {
        IMISC_NONE,
        IMISC_USEFIRST,
        IMISC_FULLHEAL,
        IMISC_HEAL,
        IMISC_0x4, // Unused
        IMISC_0x5, // Unused
        IMISC_MANA,
        IMISC_FULLMANA,
        IMISC_0x8, // Unused
        IMISC_0x9, // Unused
        IMISC_ELIXSTR,
        IMISC_ELIXMAG,
        IMISC_ELIXDEX,
        IMISC_ELIXVIT,
        IMISC_0xE,  // Unused
        IMISC_0xF,  // Unused
        IMISC_0x10, // Unused
        IMISC_0x11, // Unused
        IMISC_REJUV,
        IMISC_FULLREJUV,
        IMISC_USELAST,
        IMISC_SCROLL,
        IMISC_SCROLLT,
        IMISC_STAFF,
        IMISC_BOOK,
        IMISC_RING,
        IMISC_AMULET,
        IMISC_UNIQUE,
        IMISC_0x1C, // Unused
        IMISC_OILFIRST,
        IMISC_OILOF, /* oils are beta or hellfire only */
        IMISC_OILACC,
        IMISC_OILMAST,
        IMISC_OILSHARP,
        IMISC_OILDEATH,
        IMISC_OILSKILL,
        IMISC_OILBSMTH,
        IMISC_OILFORT,
        IMISC_OILPERM,
        IMISC_OILHARD,
        IMISC_OILIMP,
        IMISC_OILLAST,
        IMISC_MAPOFDOOM,
        IMISC_EAR,
        IMISC_SPECELIX,
        IMISC_0x2D, // Unused
        IMISC_RUNEFIRST,
        IMISC_RUNEF,
        IMISC_RUNEL,
        IMISC_GR_RUNEL,
        IMISC_GR_RUNEF,
        IMISC_RUNES,
        IMISC_RUNELAST,
        IMISC_AURIC,
        IMISC_NOTE,
        IMISC_INVALID = -1,
    };

    public enum unique_base_item
    {
        UITYPE_NONE,
        UITYPE_SHORTBOW,
        UITYPE_LONGBOW,
        UITYPE_HUNTBOW,
        UITYPE_COMPBOW,
        UITYPE_WARBOW,
        UITYPE_BATTLEBOW,
        UITYPE_DAGGER,
        UITYPE_FALCHION,
        UITYPE_CLAYMORE,
        UITYPE_BROADSWR,
        UITYPE_SABRE,
        UITYPE_SCIMITAR,
        UITYPE_LONGSWR,
        UITYPE_BASTARDSWR,
        UITYPE_TWOHANDSWR,
        UITYPE_GREATSWR,
        UITYPE_CLEAVER,
        UITYPE_LARGEAXE,
        UITYPE_BROADAXE,
        UITYPE_SMALLAXE,
        UITYPE_BATTLEAXE,
        UITYPE_GREATAXE,
        UITYPE_MACE,
        UITYPE_MORNSTAR,
        UITYPE_SPIKCLUB,
        UITYPE_MAUL,
        UITYPE_WARHAMMER,
        UITYPE_FLAIL,
        UITYPE_LONGSTAFF,
        UITYPE_SHORTSTAFF,
        UITYPE_COMPSTAFF,
        UITYPE_QUARSTAFF,
        UITYPE_WARSTAFF,
        UITYPE_SKULLCAP,
        UITYPE_HELM,
        UITYPE_GREATHELM,
        UITYPE_CROWN,
        UITYPE_38,
        UITYPE_RAGS,
        UITYPE_STUDARMOR,
        UITYPE_CLOAK,
        UITYPE_ROBE,
        UITYPE_CHAINMAIL,
        UITYPE_LEATHARMOR,
        UITYPE_BREASTPLATE,
        UITYPE_CAPE,
        UITYPE_PLATEMAIL,
        UITYPE_FULLPLATE,
        UITYPE_BUCKLER,
        UITYPE_SMALLSHIELD,
        UITYPE_LARGESHIELD,
        UITYPE_KITESHIELD,
        UITYPE_GOTHSHIELD,
        UITYPE_RING,
        UITYPE_55,
        UITYPE_AMULET,
        UITYPE_SKCROWN,
        UITYPE_INFRARING,
        UITYPE_OPTAMULET,
        UITYPE_TRING,
        UITYPE_HARCREST,
        UITYPE_MAPOFDOOM,
        UITYPE_ELIXIR,
        UITYPE_ARMOFVAL,
        UITYPE_STEELVEIL,
        UITYPE_GRISWOLD,
        UITYPE_LGTFORGE,
        UITYPE_LAZSTAFF,
        UITYPE_BOVINE,
        UITYPE_INVALID = -1,
    };

    /// Item graphic IDs; frame_num-11 of objcurs.cel.
    public enum item_cursor_graphic 
    {
        // clang-format off
        ICURS_POTION_OF_FULL_MANA         = 0,
        ICURS_SCROLL_OF                   = 1,
        ICURS_GOLD_SMALL                  = 4,
        ICURS_GOLD_MEDIUM                 = 5,
        ICURS_GOLD_LARGE                  = 6,
        ICURS_RING_OF_TRUTH               = 10,
        ICURS_RING                        = 12,
        ICURS_SPECTRAL_ELIXIR             = 15,
        ICURS_GOLDEN_ELIXIR               = 17,
        ICURS_EMPYREAN_BAND               = 18,
        ICURS_EAR_SORCERER                = 19,
        ICURS_EAR_WARRIOR                 = 20,
        ICURS_EAR_ROGUE                   = 21,
        ICURS_BLOOD_STONE                 = 25,
        ICURS_OIL                         = 30,
        ICURS_ELIXIR_OF_VITALITY          = 31,
        ICURS_POTION_OF_HEALING           = 32,
        ICURS_POTION_OF_FULL_REJUVENATION = 33,
        ICURS_ELIXIR_OF_MAGIC             = 34,
        ICURS_POTION_OF_FULL_HEALING      = 35,
        ICURS_ELIXIR_OF_DEXTERITY         = 36,
        ICURS_POTION_OF_REJUVENATION      = 37,
        ICURS_ELIXIR_OF_STRENGTH          = 38,
        ICURS_POTION_OF_MANA              = 39,
        ICURS_BRAIN                       = 40,
        ICURS_OPTIC_AMULET                = 44,
        ICURS_AMULET                      = 45,
        ICURS_DAGGER                      = 51,
        ICURS_BLADE                       = 56,
        ICURS_BASTARD_SWORD               = 57,
        ICURS_MACE                        = 59,
        ICURS_LONG_SWORD                  = 60,
        ICURS_BROAD_SWORD                 = 61,
        ICURS_FALCHION                    = 62,
        ICURS_MORNING_STAR                = 63,
        ICURS_SHORT_SWORD                 = 64,
        ICURS_CLAYMORE                    = 65,
        ICURS_CLUB                        = 66,
        ICURS_SABRE                       = 67,
        ICURS_SPIKED_CLUB                 = 70,
        ICURS_SCIMITAR                    = 72,
        ICURS_FULL_HELM                   = 75,
        ICURS_MAGIC_ROCK                  = 76,
        ICURS_THE_UNDEAD_CROWN            = 78,
        ICURS_HELM                        = 82,
        ICURS_BUCKLER                     = 83,
        ICURS_VIEL_OF_STEEL               = 85,
        ICURS_BOOK_GREY                   = 86,
        ICURS_BOOK_RED                    = 87,
        ICURS_BOOK_BLUE                   = 88,
        ICURS_BLACK_MUSHROOM              = 89,
        ICURS_SKULL_CAP                   = 90,
        ICURS_CAP                         = 91,
        ICURS_HARLEQUIN_CREST             = 93,
        ICURS_CROWN                       = 95,
        ICURS_MAP_OF_THE_STARS            = 96,
        ICURS_FUNGAL_TOME                 = 97,
        ICURS_GREAT_HELM                  = 98,
        ICURS_BATTLE_AXE                  = 101,
        ICURS_HUNTERS_BOW                 = 102,
        ICURS_FIELD_PLATE                 = 103,
        ICURS_SMALL_SHIELD                = 105,
        ICURS_CLEAVER                     = 106,
        ICURS_STUDDED_LEATHER_ARMOR       = 107,
        ICURS_SHORT_STAFF                 = 109,
        ICURS_TWO_HANDED_SWORD            = 110,
        ICURS_CHAIN_MAIL                  = 111,
        ICURS_SMALL_AXE                   = 112,
        ICURS_KITE_SHIELD                 = 113,
        ICURS_SCALE_MAIL                  = 114,
        ICURS_SHORT_BOW                   = 118,
        ICURS_LONG_BATTLE_BOW             = 119,
        ICURS_LONG_WAR_BOW                = 120,
        ICURS_WAR_HAMMER                  = 121,
        ICURS_MAUL                        = 122,
        ICURS_LONG_STAFF                  = 123,
        ICURS_WAR_STAFF                   = 124,
        ICURS_TAVERN_SIGN                 = 126,
        ICURS_HARD_LEATHER_ARMOR          = 127,
        ICURS_RAGS                        = 128,
        ICURS_QUILTED_ARMOR               = 129,
        ICURS_FLAIL                       = 131,
        ICURS_TOWER_SHIELD                = 132,
        ICURS_COMPOSITE_BOW               = 133,
        ICURS_GREAT_SWORD                 = 134,
        ICURS_LEATHER_ARMOR               = 135,
        ICURS_SPLINT_MAIL                 = 136,
        ICURS_ROBE                        = 137,
        ICURS_ANVIL_OF_FURY               = 140,
        ICURS_BROAD_AXE                   = 141,
        ICURS_LARGE_AXE                   = 142,
        ICURS_GREAT_AXE                   = 143,
        ICURS_AXE                         = 144,
        ICURS_LARGE_SHIELD                = 147,
        ICURS_GOTHIC_SHIELD               = 148,
        ICURS_CLOAK                       = 149,
        ICURS_CAPE                        = 150,
        ICURS_FULL_PLATE_MAIL             = 151,
        ICURS_GOTHIC_PLATE                = 152,
        ICURS_BREAST_PLATE                = 153,
        ICURS_RING_MAIL                   = 154,
        ICURS_STAFF_OF_LAZARUS            = 155,
        ICURS_ARKAINES_VALOR              = 157,
        ICURS_SHORT_WAR_BOW               = 165,
        ICURS_COMPOSITE_STAFF             = 166,
        ICURS_SHORT_BATTLE_BOW            = 167,
        ICURS_GOLD                        = 168,
        ICURS_AURIC_AMULET                = 180,
        ICURS_RUNE_BOMB                   = 187,
        ICURS_THEODORE                    = 188,
        ICURS_TORN_NOTE_1                 = 189,
        ICURS_TORN_NOTE_2                 = 190,
        ICURS_TORN_NOTE_3                 = 191,
        ICURS_RECONSTRUCTED_NOTE          = 192,
        ICURS_RUNE_OF_FIRE                = 193,
        ICURS_GREATER_RUNE_OF_FIRE        = 194,
        ICURS_RUNE_OF_LIGHTNING           = 195,
        ICURS_GREATER_RUNE_OF_LIGHTNING   = 196,
        ICURS_RUNE_OF_STONE               = 197,
        ICURS_GREY_SUIT                   = 198,
        ICURS_BROWN_SUIT                  = 199,
        ICURS_BOVINE                      = 226,
        // clang-format on
    };

    public enum _item_indexes 
    { // TODO defines all indexes in AllItemsList
        IDI_NONE = -1,
        IDI_GOLD,
        IDI_WARRIOR,
        IDI_WARRSHLD,
        IDI_WARRCLUB,
        IDI_ROGUE,
        IDI_SORCERER,
        IDI_CLEAVER,
        IDI_FIRSTQUEST = IDI_CLEAVER,
        IDI_SKCROWN,
        IDI_INFRARING,
        IDI_ROCK,
        IDI_OPTAMULET,
        IDI_TRING,
        IDI_BANNER,
        IDI_HARCREST,
        IDI_STEELVEIL,
        IDI_GLDNELIX,
        IDI_ANVIL,
        IDI_MUSHROOM,
        IDI_BRAIN,
        IDI_FUNGALTM,
        IDI_SPECELIX,
        IDI_BLDSTONE,
        IDI_MAPOFDOOM,
        IDI_LASTQUEST = IDI_MAPOFDOOM,
        IDI_EAR,
        IDI_HEAL,
        IDI_MANA,
        IDI_IDENTIFY,
        IDI_PORTAL,
        IDI_ARMOFVAL,
        IDI_FULLHEAL,
        IDI_FULLMANA,
        IDI_GRISWOLD,
        IDI_LGTFORGE,
        IDI_LAZSTAFF,
        IDI_RESURRECT,
        IDI_OIL,
        IDI_SHORTSTAFF,
        IDI_BARDSWORD,
        IDI_BARDDAGGER,
        IDI_RUNEBOMB,
        IDI_THEODORE,
        IDI_AURIC,
        IDI_NOTE1,
        IDI_NOTE2,
        IDI_NOTE3,
        IDI_FULLNOTE,
        IDI_BROWNSUIT,
        IDI_GREYSUIT,

        IDI_CAP,
        IDI_SKULLCAP,
        IDI_HELM,
        IDI_FULLHELM,
        IDI_CROWN,
        IDI_GREATHELM,
        IDI_CAPE,
        IDI_RAGS,
        IDI_CLOAK,
        IDI_ROBE,
        IDI_QUILTEDARMOR,
        IDI_LEATHERARMOR,
        IDI_HARDLEATHERARMOR,
        IDI_STUDDEDLEATHERARMOR,
        IDI_RINGMAIL,
        IDI_CHAINMAIL,
        IDI_SCALEMAIL,
        IDI_BREASTPLATE,
        IDI_SPLINTMAIL,
        IDI_PLATEMAIL,
        IDI_FIELDPLATE,
        IDI_GOTHICPLATE,
        IDI_FULLPLATEMAIL,
        IDI_BUCKLER,
        IDI_SMALLSHIELD,
        IDI_LARGESHIELD,
        IDI_KITESHIELD,
        IDI_TOWERSHIELD,
        IDI_GOTHICSHIELD,
        IDI_POTIONOFHEALING,
        IDI_POTIONOFFULLHEALING,
        IDI_POTIONOFMANA,
        IDI_POTIONOFFULLMANA,
        IDI_POTIONOFREJUVENATION,
        IDI_POTIONOFFULLREJUVENATION,
        IDI_BLACKSMITHOIL,
        IDI_OILOFACCURACY,
        IDI_OILOFSHARPNESS,
        IDI_OIL2,
        IDI_ELIXIROFSTRENGTH,
        IDI_ELIXIROFMAGIC,
        IDI_ELIXIROFDEXTERITY,
        IDI_ELIXIROFVITALITY,
        IDI_SCROLLOFHEALING,
        IDI_SCROLLOFSEARCH,
        IDI_SCROLLOFLIGHTING,
        IDI_SCROLLOFIDENTIFY,
        IDI_SCROLLOFRESURRECT,
        IDI_SCROLLOFFIREWALL,
        IDI_SCROLLOFINFERNO,
        IDI_SCROLLOFTOWNPORTAL,
        IDI_SCROLLOFFLASH,
        IDI_SCROLLOFINFRAVISION,
        IDI_SCROLLOFPHASING,
        IDI_SCROLLOFMANASHIELD,
        IDI_SCROLLOFFLAMEWAVE,
        IDI_SCROLLOFFIREBALL,
        IDI_SCROLLOFSTONECURSE,
        IDI_SCROLLOFCHAINLIGHTNING,
        IDI_SCROLLOFGUARDIAN,
        IDI_NONITEM, ///
        IDI_SCROLLOFNOVA,
        IDI_SCROLLOFGOLEM,
        IDI_SCROLLOFNONE,
        IDI_SCROLLOFTELEPORT,
        IDI_SCROLLOFAPOCALYPSE,
        IDI_BOOK1 = 114,
        IDI_BOOK2,
        IDI_BOOK3,
        IDI_BOOK4,
        IDI_DAGGER,
        IDI_SHORTSWORD,
        IDI_FALCHION,
        IDI_SCIMITAR,
        IDI_CLAYMORE,
        IDI_BLADE,
        IDI_SABRE,
        IDI_LONGSWORD,
        IDI_BROADSWORD,
        IDI_BASTARDSWORD,
        IDI_TWOHANDEDSWORD,
        IDI_GREATSWORD,
        IDI_SMALLAXE,
        IDI_AXE,
        IDI_LARGEAXE,
        IDI_BROADAXE,
        IDI_BATTLEAXE,
        IDI_GREATAXE,
        IDI_MACE,
        IDI_MORNINGSTAR,
        IDI_WARHAMMER,
        IDI_SPIKEDCLUB,
        IDI_CLUB,
        IDI_FLAIL,
        IDI_MAUL,
        IDI_SHORTBOW,
        IDI_HUNTERSBOW,
        IDI_LONGBOW,
        IDI_COMPOSITEBOW,
        IDI_SHORTBATTLEBOW,
        IDI_LONGBATTLEBOW,
        IDI_SHORTWARBOW,
        IDI_LONGWARBOW,
        IDI_SHORTSTAFF2,
        IDI_LONGSTAFF,
        IDI_COMPOSITESTAFF,
        IDI_QUARTERSTAFF,
        IDI_WARSTAFF,
        IDI_RING1,
        IDI_RING2,
        IDI_RING3,
        IDI_AMULET1,
        IDI_AMULET2,
        IDI_RUNEOFFIRE,
        IDI_RUNEOFLIGHTNING,
        IDI_GREATERRUNEOFFIRE,
        IDI_GREATERRUNEOFLIGHTNING,
        IDI_RUNEOFSTONE,
        IDI_SHORTSTAFFOFCHARGEDBOLT,

        IDI_BARBARIAN = IDI_SPIKEDCLUB, // 139,
        // IDI_RUNEOFSTONE = 165,
        IDI_SORCERER_DIABLO = IDI_SHORTSTAFFOFCHARGEDBOLT,

        IDI_LAST = IDI_SORCERER_DIABLO,
    };

    public enum SpellFlag 
    {
        // clang-format off
        None         = 0,
        Etherealize  = 1 << 0, // 虚无，无法被攻击
        RageActive   = 1 << 1,
        RageCooldown = 1 << 2,
        // bits 3-7 are unused
        // clang-format on
    };

    public enum spell_type 
    {
        RSPLTYPE_SKILL,
        RSPLTYPE_SPELL,
        RSPLTYPE_SCROLL,
        RSPLTYPE_CHARGES,
        RSPLTYPE_INVALID,
    };

    public enum spell_id
    {
        SPL_NULL,
        SPL_FIREBOLT,
        SPL_HEAL,
        SPL_LIGHTNING,
        SPL_FLASH,
        SPL_IDENTIFY,
        SPL_FIREWALL,
        SPL_TOWN,
        SPL_STONE,
        SPL_INFRA,
        SPL_RNDTELEPORT,
        SPL_MANASHIELD,
        SPL_FIREBALL,
        SPL_GUARDIAN,
        SPL_CHAIN,
        SPL_WAVE,
        SPL_DOOMSERP,
        SPL_BLODRIT,
        SPL_NOVA,
        SPL_INVISIBIL,
        SPL_FLAME,
        SPL_GOLEM,
        SPL_BLODBOIL,
        SPL_TELEPORT,
        SPL_APOCA,
        SPL_ETHEREALIZE,
        SPL_REPAIR,
        SPL_RECHARGE,
        SPL_DISARM,
        SPL_ELEMENT,
        SPL_CBOLT,
        SPL_HBOLT,
        SPL_RESURRECT,
        SPL_TELEKINESIS,
        SPL_HEALOTHER,
        SPL_FLARE,
        SPL_BONESPIRIT,
        SPL_LASTDIABLO = SPL_BONESPIRIT,
        SPL_MANA,
        SPL_MAGI,
        SPL_JESTER,
        SPL_LIGHTWALL,
        SPL_IMMOLAT,
        SPL_WARP,
        SPL_REFLECT,
        SPL_BERSERK,
        SPL_FIRERING,
        SPL_SEARCH,
        SPL_RUNEFIRE,
        SPL_RUNELIGHT,
        SPL_RUNENOVA,
        SPL_RUNEIMMOLAT,
        SPL_RUNESTONE,

        SPL_LAST = SPL_RUNESTONE,
        SPL_INVALID = -1,
    };

    public enum _difficulty 
    {
        DIFF_NORMAL,
        DIFF_NIGHTMARE,
        DIFF_HELL,

        DIFF_LAST = DIFF_HELL,
    };

    public enum dungeon_type
    {
        DTYPE_TOWN,
        DTYPE_CATHEDRAL,
        DTYPE_CATACOMBS,
        DTYPE_CAVES,
        DTYPE_HELL,
        DTYPE_NEST,
        DTYPE_CRYPT,

        DTYPE_LAST = DTYPE_CRYPT,
        DTYPE_NONE = -1,
    };

    public class dfDEF
    {
        public const int HPMANAOFFSET = 0;

        public const int BaseHitChance = 50;
        /** Indicate if we have loaded the Hellfire expansion data */
        public static bool gbIsHellfire = false;
        public static bool gbIsMultiplayer = false;
        /** Indicate if we only have access to demo data */
        public static bool gbIsSpawn = false;
        public static _difficulty gbDifficulty = _difficulty.DIFF_NORMAL;
        // 当前关卡等级
        public static int currlevel;
        public static dungeon_type leveltype;
    }

    public enum _monster_id
    {
        MT_NZOMBIE,
        MT_BZOMBIE,
        MT_GZOMBIE,
        MT_YZOMBIE,
        MT_RFALLSP,
        MT_DFALLSP,
        MT_YFALLSP,
        MT_BFALLSP,
        MT_WSKELAX,
        MT_TSKELAX,
        MT_RSKELAX,
        MT_XSKELAX,
        MT_RFALLSD,
        MT_DFALLSD,
        MT_YFALLSD,
        MT_BFALLSD,
        MT_NSCAV,
        MT_BSCAV,
        MT_WSCAV,
        MT_YSCAV,
        MT_WSKELBW,
        MT_TSKELBW,
        MT_RSKELBW,
        MT_XSKELBW,
        MT_WSKELSD,
        MT_TSKELSD,
        MT_RSKELSD,
        MT_XSKELSD,
        MT_INVILORD,
        MT_SNEAK,
        MT_STALKER,
        MT_UNSEEN,
        MT_ILLWEAV,
        MT_LRDSAYTR,
        MT_NGOATMC,
        MT_BGOATMC,
        MT_RGOATMC,
        MT_GGOATMC,
        MT_FIEND,
        MT_BLINK,
        MT_GLOOM,
        MT_FAMILIAR,
        MT_NGOATBW,
        MT_BGOATBW,
        MT_RGOATBW,
        MT_GGOATBW,
        MT_NACID,
        MT_RACID,
        MT_BACID,
        MT_XACID,
        MT_SKING,
        MT_CLEAVER,
        MT_FAT,
        MT_MUDMAN,
        MT_TOAD,
        MT_FLAYED,
        MT_WYRM,
        MT_CAVSLUG,
        MT_DVLWYRM,
        MT_DEVOUR,
        MT_NMAGMA,
        MT_YMAGMA,
        MT_BMAGMA,
        MT_WMAGMA,
        MT_HORNED,
        MT_MUDRUN,
        MT_FROSTC,
        MT_OBLORD,
        MT_BONEDMN,
        MT_REDDTH,
        MT_LTCHDMN,
        MT_UDEDBLRG,
        MT_INCIN,
        MT_FLAMLRD,
        MT_DOOMFIRE,
        MT_HELLBURN,
        MT_STORM,
        MT_RSTORM,
        MT_STORML,
        MT_MAEL,
        MT_BIGFALL,
        MT_WINGED,
        MT_GARGOYLE,
        MT_BLOODCLW,
        MT_DEATHW,
        MT_MEGA,
        MT_GUARD,
        MT_VTEXLRD,
        MT_BALROG,
        MT_NSNAKE,
        MT_RSNAKE,
        MT_BSNAKE,
        MT_GSNAKE,
        MT_NBLACK,
        MT_RTBLACK,
        MT_BTBLACK,
        MT_RBLACK,
        MT_UNRAV,
        MT_HOLOWONE,
        MT_PAINMSTR,
        MT_REALWEAV,
        MT_SUCCUBUS,
        MT_SNOWWICH,
        MT_HLSPWN,
        MT_SOLBRNR,
        MT_COUNSLR,
        MT_MAGISTR,
        MT_CABALIST,
        MT_ADVOCATE,
        MT_GOLEM,
        MT_DIABLO,
        MT_DARKMAGE,
        MT_HELLBOAR,
        MT_STINGER,
        MT_PSYCHORB,
        MT_ARACHNON,
        MT_FELLTWIN,
        MT_HORKSPWN,
        MT_VENMTAIL,
        MT_NECRMORB,
        MT_SPIDLORD,
        MT_LASHWORM,
        MT_TORCHANT,
        MT_HORKDMN,
        MT_DEFILER,
        MT_GRAVEDIG,
        MT_TOMBRAT,
        MT_FIREBAT,
        MT_SKLWING,
        MT_LICH,
        MT_CRYPTDMN,
        MT_HELLBAT,
        MT_BONEDEMN,
        MT_ARCHLICH,
        MT_BICLOPS,
        MT_FLESTHNG,
        MT_REAPER,
        MT_NAKRUL,
        NUM_MTYPES,
        MT_INVALID = -1,
    };

    public enum MonsterAvailability
    {
        Never,
        Always,
        Retail,
    };

    public enum _mai_id 
    {
        AI_ZOMBIE,
        AI_FAT,
        AI_SKELSD,
        AI_SKELBOW,
        AI_SCAV,
        AI_RHINO,
        AI_GOATMC,
        AI_GOATBOW,
        AI_FALLEN,
        AI_MAGMA,
        AI_SKELKING,
        AI_BAT,
        AI_GARG,
        AI_CLEAVER,
        AI_SUCC,
        AI_SNEAK,
        AI_STORM,
        AI_FIREMAN,
        AI_GARBUD,
        AI_ACID,
        AI_ACIDUNIQ,
        AI_GOLUM,
        AI_ZHAR,
        AI_SNOTSPIL,
        AI_SNAKE,
        AI_COUNSLR,
        AI_MEGA,
        AI_DIABLO,
        AI_LAZARUS,
        AI_LAZHELP,
        AI_LACHDAN,
        AI_WARLORD,
        AI_FIREBAT,
        AI_TORCHANT,
        AI_HORKDMN,
        AI_LICH,
        AI_ARCHLICH,
        AI_PSYCHORB,
        AI_NECROMORB,
        AI_BONEDEMON,
        AI_INVALID = -1,
    };

    public enum MonsterClass 
    {
        Undead,
        Demon,
        Animal,
    };

    public enum ItemSpecialEffectHf 
    {
        // clang-format off
        None               = 0,
        Devastation        = 1 << 0,
        Decay              = 1 << 1,
        Peril              = 1 << 2,
        Jesters            = 1 << 3,
        Doppelganger       = 1 << 4,
        ACAgainstDemons    = 1 << 5,
        ACAgainstUndead    = 1 << 6,
        // clang-format on
    };

    public enum MonsterMode 
    {
        Stand,
        /** Movement towards N, NW, or NE */
        MoveNorthwards,
        /** Movement towards S, SW, or SE */
        MoveSouthwards,
        /** Movement towards W or E */
        MoveSideways,
        MeleeAttack,
        HitRecovery,
        Death,
        SpecialMeleeAttack,
        FadeIn,
        FadeOut,
        RangedAttack,
        SpecialStand,
        SpecialRangedAttack,
        Delay,
        Charge,
        Petrified, // 石化
        Heal,
        Talk,
    };

    public enum HeroClass
    {
        Warrior, // 战士
        Rogue, // 弓箭手
        Sorcerer, // 魔法师
        Monk, // 武僧
        Bard, // 游吟诗人
        Barbarian, // 野蛮人

        LAST = Barbarian
    };

    [Flags]
    public enum ItemSpecialEffect
    {
        // clang-format off
        None                   = 0,
        RandomStealLife        = 1 << 1,
        RandomArrowVelocity    = 1 << 2,
        FireArrows             = 1 << 3,
        FireDamage             = 1 << 4,
        LightningDamage        = 1 << 5,
        DrainLife              = 1 << 6,
        MultipleArrows         = 1 << 9,
        Knockback              = 1 << 11,
        StealMana3             = 1 << 13,
        StealMana5             = 1 << 14,
        StealLife3             = 1 << 15,
        StealLife5             = 1 << 16,
        QuickAttack            = 1 << 17,
        FastAttack             = 1 << 18,
        FasterAttack           = 1 << 19,
        FastestAttack          = 1 << 20,
        FastHitRecovery        = 1 << 21,
        FasterHitRecovery      = 1 << 22,
        FastestHitRecovery     = 1 << 23,
        FastBlock              = 1 << 24,
        LightningArrows        = 1 << 25,
        Thorns                 = 1 << 26,
        NoMana                 = 1 << 27,
        HalfTrapDamage         = 1 << 28,
        TripleDemonDamage      = 1 << 30,
        ZeroResistance         = 1 << 31,
        // clang-format on
    };

    public enum ItemType
    {
        Misc,
        Sword,
        Axe,
        Bow,
        Mace,
        Shield,
        LightArmor,
        Helm,
        MediumArmor,
        HeavyArmor,
        Staff,
        Gold,
        Ring,
        Amulet,
        None = -1,
    };

    // Logical equipment locations
    public enum inv_body_loc 
    {
        INVLOC_HEAD,
        INVLOC_RING_LEFT,
        INVLOC_RING_RIGHT,
        INVLOC_AMULET,
        INVLOC_HAND_LEFT,
        INVLOC_HAND_RIGHT,
        INVLOC_CHEST,
        NUM_INVLOC,
    };
}
